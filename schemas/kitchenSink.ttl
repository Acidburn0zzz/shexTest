@prefix ex: <http://a.example> .
@prefix sx: <http://shex.io/ns/shex#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://ex.example/#FooID> a sx:Shape ;
    sx:closed true ;
    sx:expression [ a sx:Inclusion ;
            sx:include _:f69991e2dc0824011885a6cd3776b8932b6 ] ;
    sx:extra <http://ex.example/#code>,
        <http://ex.example/#system> .

<http://ex.example/#UserShape> a sx:Shape ;
    sx:expression [ a sx:EachOf ;
            sx:expressions ( [ a sx:OneOf ;
                        sx:expressions ( [ a sx:TripleConstraint ;
                                    sx:predicate <http://xmlns.com/foaf/name> ;
                                    sx:valueExpr [ a sx:NodeConstraint ;
                                            sx:datatype xsd:string ] ] [ a sx:EachOf ;
                                    sx:expressions ( [ a sx:TripleConstraint ;
                                                sx:max "*" ;
                                                sx:min "1"^^xsd:nonNegativeInteger ;
                                                sx:predicate <http://xmlns.com/foaf/givenName> ;
                                                sx:valueExpr [ a sx:NodeConstraint ;
                                                        sx:datatype xsd:string ] ] [ a sx:TripleConstraint ;
                                                sx:predicate <http://xmlns.com/foaf/familyName> ;
                                                sx:valueExpr [ a sx:NodeConstraint ;
                                                        sx:datatype xsd:string ] ] ) ] ) ] [ a sx:TripleConstraint ;
                        sx:predicate <http://xmlns.com/foaf/mbox> ;
                        sx:valueExpr [ a sx:NodeConstraint ;
                                sx:nodeKind "iri" ;
                                sx:pattern "^mailto:" ] ] [ a sx:TripleConstraint ;
                        sx:predicate <http://ex.example/#id> ;
                        sx:valueExpr [ a sx:ShapeAnd ;
                                sx:shapeExprs ( [ a sx:NodeConstraint ;
                                            sx:nodeKind "bnode" ] [ a sx:ShapeRef ;
                                            sx:reference _:f69991e2dc0824011885a6cd3776b8932b6 ] ) ] ] ) ] .

<http://ex.example/#EmployeeShape> a sx:Shape ;
    sx:expression [ a sx:EachOf ;
            sx:expressions ( [ a sx:TripleConstraint ;
                        sx:max "*" ;
                        sx:min "1"^^xsd:nonNegativeInteger ;
                        sx:predicate <http://xmlns.com/foaf/givenName> ;
                        sx:valueExpr [ a sx:NodeConstraint ;
                                sx:datatype xsd:string ] ] [ a sx:TripleConstraint ;
                        sx:predicate <http://xmlns.com/foaf/familyName> ;
                        sx:valueExpr [ a sx:NodeConstraint ;
                                sx:datatype xsd:string ] ] [ a sx:TripleConstraint ;
                        sx:max "*" ;
                        sx:min "0"^^xsd:nonNegativeInteger ;
                        sx:predicate <http://xmlns.com/foaf/phone> ;
                        sx:valueExpr [ a sx:NodeConstraint ;
                                sx:nodeKind "iri" ] ] [ a sx:TripleConstraint ;
                        sx:max 1 ;
                        sx:min "0"^^xsd:nonNegativeInteger ;
                        sx:predicate <http://xmlns.com/foaf/mbox> ;
                        sx:valueExpr [ a sx:NodeConstraint ;
                                sx:nodeKind "iri" ] ] ) ] .

<http://ex.example/S1> a sx:Shape ;
    sx:expression [ a sx:EachOf ;
            sx:expressions ( [ a sx:TripleConstraint ;
                        sx:max 1 ;
                        sx:min "0"^^xsd:nonNegativeInteger ;
                        sx:predicate rdf:type ;
                        sx:valueExpr [ a sx:NodeConstraint ;
                                sx:value <http://ex.example/#Issue> ] ] [ a sx:TripleConstraint ;
                        sx:annotation [ a sx:Annotation ;
                                sx:object [ ] ;
                                sx:predicate <http://www.w3.org/2000/01/rdf-schem#label> ],
                            [ a sx:Annotation ;
                                sx:object [ ] ;
                                sx:predicate <http://www.w3.org/2000/01/rdf-schem#description> ] ;
                        sx:predicate <http://ex.example/#state> ;
                        sx:valueExpr [ a sx:NodeConstraint ;
                                sx:value [ a sx:StemRange ;
                                        sx:exclusion <http://ex.example/#state_resolved> ;
                                        sx:stem "http://ex.example/#state"^^xsd:anyUri ] ] ] [ a sx:TripleConstraint ;
                        sx:predicate <http://ex.example/#reportedBy> ;
                        sx:valueExpr [ a sx:ShapeAnd ;
                                sx:shapeExprs ( [ a sx:NodeConstraint ;
                                            sx:nodeKind "iri" ] [ a sx:ShapeRef ;
                                            sx:reference <http://ex.example/#UserShape> ] ) ] ] [ a sx:TripleConstraint ;
                        sx:predicate <http://ex.example/#reportedOn> ;
                        sx:valueExpr [ a sx:NodeConstraint ;
                                sx:datatype xsd:dateTime ] ] [ a sx:EachOf ;
                        sx:expressions ( [ a sx:TripleConstraint ;
                                    sx:predicate <http://ex.example/#reproducedBy> ;
                                    sx:valueExpr [ a sx:ShapeAnd ;
                                            sx:shapeExprs ( [ a sx:NodeConstraint ;
                                                        sx:nodeKind "nonliteral" ] [ a sx:ShapeRef ;
                                                        sx:reference <http://ex.example/#EmployeeShape> ] ) ] ] [ a sx:TripleConstraint ;
                                    sx:predicate <http://ex.example/#reproducedOn> ;
                                    sx:valueExpr [ a sx:NodeConstraint ;
                                            sx:datatype xsd:dateTime ] ] ) ;
                        sx:max 1 ;
                        sx:min "0"^^xsd:nonNegativeInteger ] [ a sx:TripleConstraint ;
                        sx:max "*" ;
                        sx:min "0"^^xsd:nonNegativeInteger ;
                        sx:predicate <http://ex.example/#related> ;
                        sx:valueExpr [ a sx:ShapeRef ;
                                sx:reference <http://ex.example/S1> ] ] ) ] .

[] a sx:Schema ;
    sx:shapes _:f69991e2dc0824011885a6cd3776b8932b6,
        <http://ex.example/#EmployeeShape>,
        <http://ex.example/#FooID>,
        <http://ex.example/#UserShape>,
        <http://ex.example/S1> ;
    sx:start [ a sx:ShapeRef ;
            sx:reference <http://ex.example/S1> ] .

_:f69991e2dc0824011885a6cd3776b8932b100 sx:datatype xsd:boolean .

_:f69991e2dc0824011885a6cd3776b8932b101 sx:datatype xsd:boolean .

_:f69991e2dc0824011885a6cd3776b8932b103 a sx:ShapeRef ;
    sx:reference <http://ex.example/S1> .

_:f69991e2dc0824011885a6cd3776b8932b104 a sx:ShapeRef ;
    sx:reference <http://ex.example/S1> .

_:f69991e2dc0824011885a6cd3776b8932b105 a sx:ShapeRef ;
    sx:reference <http://ex.example/#EmployeeShape> .

_:f69991e2dc0824011885a6cd3776b8932b20 rdf:first [ a sx:EachOf ;
            sx:expressions ( [ a sx:TripleConstraint ;
                        sx:predicate <http://ex.example/#code> ;
                        sx:valueExpr [ a sx:NodeConstraint ;
                                sx:nodeKind "literal" ] ] [ a sx:TripleConstraint ;
                        sx:predicate <http://ex.example/#system> ;
                        sx:valueExpr [ a sx:NodeConstraint ;
                                sx:nodeKind "iri" ] ] [ a sx:TripleConstraint ;
                        sx:max 3 ;
                        sx:min "2"^^xsd:nonNegativeInteger ;
                        sx:predicate <http://ex.example/#literal> ;
                        sx:valueExpr [ a sx:NodeConstraint ;
                                sx:value [ ],
                                    [ sx:datatype <http://ex.example/#c> ],
                                    [ ],
                                    [ ] ] ] [ a sx:TripleConstraint ;
                        sx:predicate <http://ex.example/#misc> ;
                        sx:valueExpr [ a sx:NodeConstraint ;
                                sx:nodeKind "bnode" ] ] ) ] ;
    rdf:rest ( [ a sx:EachOf ;
                sx:expressions ( [ a sx:EachOf ;
                            sx:expressions ( [ a sx:TripleConstraint ;
                                        sx:inverse true ;
                                        sx:predicate <http://ex.example/#ref> ;
                                        sx:valueExpr [ a sx:NodeConstraint ;
                                                sx:value _:f69991e2dc0824011885a6cd3776b8932b100,
                                                    _:f69991e2dc0824011885a6cd3776b8932b101 ] ] [ a sx:TripleConstraint ;
                                        sx:inverse true ;
                                        sx:predicate <http://ex.example/#miscRef> ] ) ] [ a sx:TripleConstraint ;
                            sx:max "*" ;
                            sx:min "0"^^xsd:nonNegativeInteger ;
                            sx:predicate <http://ex.example/#issues> ;
                            sx:valueExpr _:f69991e2dc0824011885a6cd3776b8932b103 ] [ a sx:TripleConstraint ;
                            sx:max "*" ;
                            sx:min "0"^^xsd:nonNegativeInteger ;
                            sx:predicate <http://ex.example/#seeAlso> ;
                            sx:valueExpr _:f69991e2dc0824011885a6cd3776b8932b104 ] [ a sx:TripleConstraint ;
                            sx:max "*" ;
                            sx:min "0"^^xsd:nonNegativeInteger ;
                            sx:predicate <http://ex.example/#says> ;
                            sx:valueExpr _:f69991e2dc0824011885a6cd3776b8932b105 ] ) ] ) .

_:f69991e2dc0824011885a6cd3776b8932b85 a sx:OneOf ;
    sx:expressions _:f69991e2dc0824011885a6cd3776b8932b20 .

_:f69991e2dc0824011885a6cd3776b8932b6 a sx:Shape ;
    sx:expression _:f69991e2dc0824011885a6cd3776b8932b85 .


